buildscript {
  ext.ebean_version = "11.11.1"

  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.4'
    classpath "io.ebean:ebean-gradle-plugin:11.9.1"
  }
}

plugins {
  id "com.moowork.node" version "1.2.0"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

apply plugin: 'maven'
apply plugin: 'com.google.protobuf'
apply plugin: 'io.ebean'

group = 'acmcsus'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "acmcsus.debugjudge.DebugJudgeMain"

repositories {
   maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {

// https://mvnrepository.com/artifact/org.eclipse.jetty.aggregate/jetty-all
  compile group: 'org.eclipse.jetty.aggregate', name: 'jetty-all', version: '9.4.8.v20171121', ext: 'pom'


  compile group: 'com.google.protobuf', name: 'protobuf-gradle-plugin', version: '0.8.4'
  compile group: 'com.sparkjava', name: 'spark-core', version:'2.5.5'
  compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.39'
  compile group: 'io.ebean', name: 'ebean', version:'11.10.1'
  compile group: 'io.ebean', name: 'ebean-gradle-plugin', version: '11.10.1'

  compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.8.7'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.8.7'
  compile group: 'com.google.protobuf', name: 'protobuf-java', version:'3.3.1'
  compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.24'
  compile group: 'org.slf4j', name: 'slf4j-simple', version:'1.7.24'
  compile group: 'org.apache.commons', name: 'commons-csv', version:'1.4'

  testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'
  testCompile group: 'junit', name: 'junit', version:'4.12'
}

task buildApp(type: NpmTask) {
  workingDir = file("${project.projectDir}/")
  args = ['run-script', 'buildall']
}
task buildJudge(type: NpmTask) {
  workingDir = file("${project.projectDir}/")
  args = ['run-script', 'build-judge']
}

protobuf {
  protoc {
    artifact = 'com.google.protobuf:protoc:3.0.0'
  }
  generateProtoTasks {
    // all() returns the collection of all protoc tasks
    all().each { task ->
      task.builtins {
        // This yields
        // "--java_out=example_option1=true,example_option2:/path/to/output"
        // on the protoc commandline, which is equivalent to
        // "--java_out=/path/to/output --java_opt=example_option1=true,example_option2"
        // with the latest version of protoc.
        java { }
      }
    }
  }
}
